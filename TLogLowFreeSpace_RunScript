--http://dba.stackexchange.com/questions/97412/monitoring-free-space-in-sql-server-data-files
--Full Instructions With Job, Alert & Error Message Instructions.

USE Master;
GO

IF OBJECT_ID('tempdb..#dbserversize') IS NOT NULL DROP TABLE #dbserversize;
CREATE TABLE dbo.#dbserversize (
	[id] int identity (1,1)
	,[databaseName] sysname
	,[Drive]    varchar(3)
	,[Logical Name] sysname
	,[Physical Name]    varchar(max)
	,[File Size MB] decimal(38, 2)
	,[Space Used MB]    decimal(38, 2)
	,[Free Space]   decimal(38, 2)
	,[%Free Space]  decimal(38, 2)
	,[Max Size] varchar(max)
	,[Growth Rate]  varchar(max)
	);

    declare @id int
    declare @threshold int
    declare @dbname sysname
    declare @sqltext nvarchar(max)
    declare @freespacePct int

    SET @threshold = 25   --->>>>>>>>>>>>>>>>> Threshold for %Free Space <<<<<<<<<<<<<<<<<<<<<---

SELECT @dbname = min(name) FROM sys.databases WHERE database_id > 4 and [state] = 0 
while @dbname is not NULL
	BEGIN
	SELECT @dbname = name FROM sys.databases WHERE name = @dbname and database_id > 4 and [state] = 0 
	--- Modified from Erin's blog : Proactive SQL Server Health Checks, Part 1 : Disk Space
	--- source http://sqlperformance.com/2014/12/io-subsystem/proactive-sql-server-health-checks-1
	SET @sqltext =  ' use ['+@dbname+'];'+' 
		insert into dbo.#dbserversize
			select '''+@dbname+''' as [databaseName]
			,substring([physical_name], 1, 3) as [Drive]
			,[name] as [Logical Name]
			,[physical_name] as [Physical Name]
			,cast(CAST([size] as decimal(38, 2)) / 128.0 as decimal(38, 2)) as [File Size MB]
			,cast(CAST(FILEPROPERTY([name], ''SpaceUsed'') as decimal(38, 2)) / 128.0 as decimal(38, 2)) as [Space Used MB]
			,cast((CAST([size] as decimal(38, 0)) / 128) - (CAST(FILEPROPERTY([name], ''SpaceUsed'') as decimal(38, 0)) / 128.) as decimal(38, 2)) as [Free Space]
			,cast(((CAST([size] as decimal(38, 2)) / 128) - (CAST(FILEPROPERTY([name], ''SpaceUsed'') as decimal(38, 2)) / 128.0)) * 100.0 / (CAST([size] as decimal(38, 2)) / 128) as decimal(38, 2)) as [%Free Space]
			,case 
				when cast([max_size] as varchar(max)) = - 1
					then ''UNLIMITED''
					else cast([max_size] as varchar(max))
				end as [Max Size]
			,case 
				when is_percent_growth = 1
					then cast([growth] as varchar(20)) + ''%''
					else cast([growth] as varchar(20)) + ''MB''
				end as [Growth Rate]
		from sys.database_files
		where type = 1 -- for Rows , 1 = LOG'
	EXEC (@sqltext)

	SELECT @dbname = min(name) FROM sys.databases WHERE name > @dbname and database_id > 4 and [state] = 0 
	END

--- delete the entries that do not meet the threshold 
DELETE FROM dbo.#dbserversize WHERE [%Free Space] > @threshold;

--- NOW Raise errors for the databases that we got flagged up
WHILE exists (SELECT NULL FROM dbo.#dbserversize)
	BEGIN
		SELECT TOP 1 @id = id, @dbname = databaseName,@freespacePct = [%Free Space] from dbo.#dbserversize;
		RAISERROR(911421, 10,1,@freespacePct, @dbname) with LOG;
		delete from dbo.#dbserversize where id = @id;
	END
